
name: Java CI with Gradle-TEST

on:
  push:
    branches: [ "develop" ]

env:
  S3_BUCKET_NAME: gate-back-test

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      # secrets 내용을 읽어 yml 파일을 특정 위치에 생성
      - name: make application.yml
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION }}" > ./application.yml

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle Wrapper
        run: ./gradlew clean build -x test

      # 디렉토리 생성
      - name: Make Directory
        run: mkdir -p deploy

        # Jar 파일 복사
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy

        # appspec.yml 파일 복사
      - name: Copy appspec.yml
        run: cp appspec.yml ./deploy

        # script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      - name: Make zip file
        run: zip -r ./back_end_test.zip ./deploy
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY2}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY2}}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./back_end_test.zip s3://$S3_BUCKET_NAME/

        # Deploy 설정
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY2 }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY2 }}
        run: |
          aws deploy create-deployment \
          --application-name gate-test-deploy \
          --deployment-group-name gate-test-deploy-group \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=gate-back-test,bundleType=zip,key=back_end_test.zip \
          --region ap-northeast-2
